name: CI

on:
  pull_request: {}
  push:
    branches: main

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        toolchain:
          - stable
          - 1.46.0 # MSRV
    steps:
      - uses: actions/checkout@v1
      - name: cache .cargo/registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
      - name: cache .cargo/git
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
      - name: cache target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-cargo-build-target-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
      - run: cargo build --release
      - run: cargo build --release --no-default-features
      - run: cargo build --release --no-default-features --features=passwords
      - run: cargo build --release --features=usb
      - run: cargo build --benches

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        toolchain:
          - stable
          - 1.46.0 # MSRV
    steps:
      - uses: actions/checkout@v1
      - name: cache .cargo/registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
      - name: cache .cargo/git
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
      - name: cache target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-cargo-build-target-${{ hashFiles('Cargo.lock') }}
      - run: cargo test --features=mockhsm,secp256k1,untested

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.46.0 # MSRV
          components: clippy
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/tarpaulin@v0.1
        with:
          version: latest
          args: --all-features -- --test-threads 1
      - uses: codecov/codecov-action@v1
      - uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
